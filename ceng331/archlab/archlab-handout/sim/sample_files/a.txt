e2380996@inek38:~/corg_2/archlab-handout/sim/sample_files$ ./../pipe/psim switch8_slow.yo
Y86-64 Processor: pipe-full.hcl
493 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rsp, valC = 0x1f00, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0xa, imem_instr = irmovq, f_instr = irmovq

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = irmovq, rA = ----, rB = %rdi, valC = 0x1008, valP = 0x14, Stat = AOK
E: instr = irmovq, valC = 0x1f00, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Execute: ALU: + 0x1f00 0x0 --> 0x1f00
	Fetch: f_pc = 0x14, imem_instr = irmovq, f_instr = irmovq

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1e
D: instr = irmovq, rA = ----, rB = %rsi, valC = 0x1500, valP = 0x1e, Stat = AOK
E: instr = irmovq, valC = 0x1008, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1f00, valA = 0x0
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Execute: ALU: + 0x1008 0x0 --> 0x1008
	Fetch: f_pc = 0x1e, imem_instr = irmovq, f_instr = irmovq

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x28
D: instr = irmovq, rA = ----, rB = %rdx, valC = 0x10, valP = 0x28, Stat = AOK
E: instr = irmovq, valC = 0x1500, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1008, valA = 0x0
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1f00, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Execute: ALU: + 0x1500 0x0 --> 0x1500
	Fetch: f_pc = 0x28, imem_instr = call, f_instr = call
	Writeback: Wrote 0x1f00 to register %rsp

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x32
D: instr = call, rA = ----, rB = ----, valC = 0x32, valP = 0x31, Stat = AOK
E: instr = irmovq, valC = 0x10, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1500, valA = 0x0
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1008, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Execute: ALU: + 0x10 0x0 --> 0x10
	Fetch: f_pc = 0x32, imem_instr = andq, f_instr = andq
	Writeback: Wrote 0x1008 to register %rdi

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x34
D: instr = andq, rA = %rdx, rB = %rdx, valC = 0x0, valP = 0x34, Stat = AOK
E: instr = call, valC = 0x32, valA = 0x31, valB = 0x1f00
   srcA = ----, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x10, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1500, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Execute: ALU: + 0xfffffffffffffff8 0x1f00 --> 0x1ef8
	Fetch: f_pc = 0x34, imem_instr = jle, f_instr = jle
	Writeback: Wrote 0x1500 to register %rsi

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xae
D: instr = jle, rA = ----, rB = ----, valC = 0xae, valP = 0x3d, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x10, valB = 0x10
   srcA = %rdx, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = call, Cnd = 1, valE = 0x1ef8, valA = 0x31
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x10, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Execute: ALU: & 0x10 0x10 --> 0x10
	Execute: New cc = Z=0 S=0 O=0
	Fetch: f_pc = 0xae, imem_instr = ret, f_instr = ret
	Writeback: Wrote 0x10 to register %rdx
	Wrote 0x31 to address 0x1ef8

Cycle 8. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xaf
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0xaf, Stat = AOK
E: instr = jle, valC = 0xae, valA = 0x3d, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x10, valA = 0x10
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = call, valE = 0x1ef8, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0xaf, imem_instr = irmovq, f_instr = irmovq
	Writeback: Wrote 0x1ef8 to register %rsp

Cycle 9. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xaf
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x3d
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x10, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0x3d, imem_instr = mrmovq, f_instr = mrmovq
	Writeback: Wrote 0x10 to register %rdx

Cycle 10. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x47
D: instr = mrmovq, rA = %r8, rB = %rdi, valC = 0x0, valP = 0x47, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0x47, imem_instr = mrmovq, f_instr = mrmovq

Cycle 11. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x51
D: instr = mrmovq, rA = %r11, rB = %rdi, valC = 0x0, valP = 0x51, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x1008
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r8, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Execute: ALU: + 0x0 0x1008 --> 0x1008
	Fetch: f_pc = 0x51, imem_instr = irmovq, f_instr = irmovq

Cycle 12. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x5b
D: instr = irmovq, rA = ----, rB = %r12, valC = 0x8, valP = 0x5b, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x1008, valB = 0x1008
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r11, Stat = AOK
M: instr = mrmovq, Cnd = 1, valE = 0x1008, valA = 0x0
   dstE = ----, dstM = %r8, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Memory: Read 0x0 from 0x1008
	Execute: ALU: + 0x0 0x1008 --> 0x1008
	Fetch: f_pc = 0x5b, imem_instr = irmovq, f_instr = irmovq

Cycle 13. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x65
D: instr = irmovq, rA = ----, rB = %r13, valC = 0x15, valP = 0x65, Stat = AOK
E: instr = irmovq, valC = 0x8, valA = 0x1008, valB = 0x1008
   srcA = ----, srcB = ----, dstE = %r12, dstM = ----, Stat = AOK
M: instr = mrmovq, Cnd = 1, valE = 0x1008, valA = 0x1008
   dstE = ----, dstM = %r11, Stat = AOK
W: instr = mrmovq, valE = 0x1008, valM = 0x0, dstE = ----, dstM = %r8, Stat = AOK
	Memory: Read 0x0 from 0x1008
	Execute: ALU: + 0x8 0x0 --> 0x8
	Fetch: f_pc = 0x65, imem_instr = modq, f_instr = modq
	Writeback: Wrote 0x0 to register %r8

Cycle 14. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x67
D: instr = modq, rA = %r12, rB = %r8, valC = 0x0, valP = 0x67, Stat = AOK
E: instr = irmovq, valC = 0x15, valA = 0x1008, valB = 0x1008
   srcA = ----, srcB = ----, dstE = %r13, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x8, valA = 0x1008
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = mrmovq, valE = 0x1008, valM = 0x0, dstE = ----, dstM = %r11, Stat = AOK
	Execute: ALU: + 0x15 0x0 --> 0x15
	Fetch: f_pc = 0x67, imem_instr = rrmovq, f_instr = rrmovq
	Writeback: Wrote 0x0 to register %r11

Cycle 15. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x69
D: instr = rrmovq, rA = %r8, rB = %r9, valC = 0x0, valP = 0x69, Stat = AOK
E: instr = modq, valC = 0x0, valA = 0x8, valB = 0x0
   srcA = %r12, srcB = %r8, dstE = %r8, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x15, valA = 0x1008
   dstE = %r13, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x8, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Execute: ALU: % 0x8 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Fetch: f_pc = 0x69, imem_instr = mllq, f_instr = mllq
	Writeback: Wrote 0x8 to register %r12

Cycle 16. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x6b
D: instr = mllq, rA = %r13, rB = %r9, valC = 0x0, valP = 0x6b, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %r8, srcB = ----, dstE = %r9, dstM = ----, Stat = AOK
M: instr = modq, Cnd = 1, valE = 0x0, valA = 0x8
   dstE = %r8, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x15, valM = 0x0, dstE = %r13, dstM = ----, Stat = AOK
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0x6b, imem_instr = jtab, f_instr = jtab
	Writeback: Wrote 0x15 to register %r13

Cycle 17. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x75
D: instr = jtab, rA = ----, rB = %r9, valC = 0xaf, valP = 0x75, Stat = AOK
E: instr = mllq, valC = 0x0, valA = 0x15, valB = 0x0
   srcA = %r13, srcB = %r9, dstE = %r9, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = %r9, dstM = ----, Stat = AOK
W: instr = modq, valE = 0x0, valM = 0x0, dstE = %r8, dstM = ----, Stat = AOK
	Execute: ALU: / 0x15 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Fetch: f_pc = 0x75, imem_instr = irmovq, f_instr = irmovq
	Writeback: Wrote 0x0 to register %r8

Cycle 18. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x7f
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x10, valP = 0x7f, Stat = AOK
E: instr = jtab, valC = 0xaf, valA = 0x0, valB = 0x0
   srcA = ----, srcB = %r9, dstE = ----, dstM = ----, Stat = AOK
M: instr = mllq, Cnd = 1, valE = 0x0, valA = 0x15
   dstE = %r9, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x0, valM = 0x0, dstE = %r9, dstM = ----, Stat = AOK
	Execute: ALU: + 0xaf 0x0 --> 0xaf
	Fetch: f_pc = 0x7f, imem_instr = addq, f_instr = addq
	Writeback: Wrote 0x0 to register %r9

Cycle 19. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x81
D: instr = addq, rA = %r10, rB = %r11, valC = 0x0, valP = 0x81, Stat = AOK
E: instr = irmovq, valC = 0x10, valA = 0xaf, valB = 0xaf
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = jtab, Cnd = 1, valE = 0xaf, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = mllq, valE = 0x0, valM = 0x0, dstE = %r9, dstM = ----, Stat = AOK
	Memory: Read 0x1fa30 from 0xaf
	Execute: ALU: + 0x10 0x0 --> 0x10
	Fetch: f_pc = 0x81, imem_instr = rmmovq, f_instr = rmmovq
	Writeback: Wrote 0x0 to register %r9

Cycle 20. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x8b
D: instr = rmmovq, rA = %r11, rB = %rsi, valC = 0x0, valP = 0x8b, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x10, valB = 0x0
   srcA = %r10, srcB = %r11, dstE = %r11, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x10, valA = 0xaf
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = jtab, valE = 0xaf, valM = 0x1fa30, dstE = ----, dstM = ----, Stat = AOK
	Execute: ALU: + 0x10 0x0 --> 0x10
	Execute: New cc = Z=0 S=0 O=0

Cycle 21. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x1fa31
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x1fa31, Stat = ADR
E: instr = rmmovq, valC = 0x0, valA = 0x10, valB = 0x1500
   srcA = %r11, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x10, valA = 0x10
   dstE = %r11, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x10, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Execute: ALU: + 0x0 0x1500 --> 0x1500
	Writeback: Wrote 0x10 to register %r10

Cycle 22. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x1fa32
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x1fa32, Stat = ADR
E: instr = nop, valC = 0x0, valA = 0x1500, valB = 0x1500
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = ADR
M: instr = rmmovq, Cnd = 1, valE = 0x1500, valA = 0x10
   dstE = ----, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x10, valM = 0x0, dstE = %r11, dstM = ----, Stat = AOK
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x10 to register %r11
	Wrote 0x10 to address 0x1500

Cycle 23. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x1fa33
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x1fa33, Stat = ADR
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = ADR
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x1500
   dstE = ----, dstM = ----, Stat = ADR
W: instr = rmmovq, valE = 0x1500, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 24. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x1fa34
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x1fa34, Stat = ADR
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = ADR
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = ADR
	Execute: ALU: + 0x0 0x0 --> 0x0
25 instructions executed
Status = ADR
Condition Codes: Z=0 S=0 O=0
Changed Register State:
%rdx:	0x0000000000000000	0x0000000000000010
%rsp:	0x0000000000000000	0x0000000000001ef8
%rsi:	0x0000000000000000	0x0000000000001500
%rdi:	0x0000000000000000	0x0000000000001008
%r10:	0x0000000000000000	0x0000000000000010
%r11:	0x0000000000000000	0x0000000000000010
%r12:	0x0000000000000000	0x0000000000000008
%r13:	0x0000000000000000	0x0000000000000015
Changed Memory State:
0x1500:	0x0000000000000000	0x0000000000000010
0x1ef8:	0x0000000000000000	0x0000000000000031
CPI: 21 cycles/19 instructions = 1.11
e2380996@inek38:~/corg_2/archlab-handout/sim/sample_files$ 
