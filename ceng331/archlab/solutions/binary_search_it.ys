# MERT ULUDOĞAN 2380996


#implement your code below (DO NOT CHANGE/REMOVE THIS COMMENT)

# mid = rcx
# initial_begin = rbx

# begin = rdi ; end = rsi ; value ; rdx

binary_search:
    irmovq $8, %r10
    irmovq $2, %r11
    rrmovq %rdi, %rbx
loop:
loop_case:
    rrmovq %rsi, %rax
    subq %rdi, %rax
    jle failure
calculate_mid:
    rrmovq %rsi, %rcx
    subq %rdi, %rcx
    dvvq %r10, %rcx
    dvvq %r11, %rcx
    mllq %r10, %rcx
    addq %rdi, %rcx
    mrmovq (%rcx), %rax
check_mid:
    subq %rdx, %rax # mid - value
    je success
    jl mid_less
mid_greater_eq:
    rrmovq %rcx, %rsi
    jmp loop
mid_less:
    rrmovq %rcx, %rdi
    addq %r10, %rdi
    jmp loop
success:
    subq %rbx, %rcx
    dvvq %r10, %rcx
    irmovq $1, %rax
    addq %rcx, %rax
    ret 

failure:
    irmovq $-1, %rax
    ret

#implement your code above (DO NOT CHANGE/REMOVE THIS COMMENT)

.pos 0x1F00
stack:
    .quad 0

